tls_private_key.key_pair: Refreshing state... [id=c8929b39f5dd22999c5d979a1312bcf63cdac228]
aws_key_pair.key_pair: Refreshing state... [id=lab-aws-dev-windows-us-east-1]
aws_eip.nat-eip: Refreshing state... [id=eipalloc-0a7c76158cd8b1f6e]
aws_vpc.vpc: Refreshing state... [id=vpc-053509139cb9aa676]
local_file.ssh_key: Refreshing state... [id=80298464ce47768b11088ab0b63be63272e69b83]
aws_internet_gateway.gw: Refreshing state... [id=igw-01d69ad416b940843]
aws_subnet.private-subnet-2: Refreshing state... [id=subnet-0cbc66ce6dfcb28d0]
aws_subnet.private-subnet-1: Refreshing state... [id=subnet-0992e4f2d0fc839fb]
aws_subnet.public-subnet-2: Refreshing state... [id=subnet-0e09806e6a18a5107]
aws_subnet.public-subnet-1: Refreshing state... [id=subnet-0fbfa15e29982307c]
aws_lb_target_group.linux-alb-target-group-http: Refreshing state... [id=arn:aws:elasticloadbalancing:us-east-1:647780367117:targetgroup/lab-aws-dev-linux-alb-tg-http/bcd183c3daf60605]
aws_security_group.linux-alb-sg: Refreshing state... [id=sg-0b419d0fa5ce37230]
aws_security_group.aws-linux-sg: Refreshing state... [id=sg-02dd7a07cb7be7783]
aws_route_table.public-rt: Refreshing state... [id=rtb-0e2a865ceda0f76bf]
aws_route_table_association.public-rt-2-association: Refreshing state... [id=rtbassoc-0d7eccb476aaa45f0]
aws_route_table_association.public-rt-1-association: Refreshing state... [id=rtbassoc-018ef3958eecc3c0e]
aws_nat_gateway.nat: Refreshing state... [id=nat-0e30ef4b0927848dd]
aws_lb.linux-alb: Refreshing state... [id=arn:aws:elasticloadbalancing:us-east-1:647780367117:loadbalancer/app/lab-aws-dev-linux-alb/2dc9968bfcac1947]
aws_route_table.private-rt: Refreshing state... [id=rtb-05a70f560c0e7a1c9]
aws_route_table_association.private-rt-1-association: Refreshing state... [id=rtbassoc-017f69d7668e5ca24]
aws_route_table_association.private-rt-2-association: Refreshing state... [id=rtbassoc-0b3d17d1afcf9e6a9]
aws_lb_listener.linux-alb-listener-http: Refreshing state... [id=arn:aws:elasticloadbalancing:us-east-1:647780367117:listener/app/lab-aws-dev-linux-alb/2dc9968bfcac1947/1caa3c7bbce58686]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:       
  + create
  ~ update in-place

Terraform will perform the following actions:

  # aws_alb_target_group_attachment.linux-alb-target-group-http-attach[0] will be created
  + resource "aws_alb_target_group_attachment" "linux-alb-target-group-http-attach" {
      + id               = (known after apply)
      + port             = 80
      + target_group_arn = "arn:aws:elasticloadbalancing:us-east-1:647780367117:targetgroup/lab-aws-dev-linux-alb-tg-http/bcd183c3daf60605"      
      + target_id        = (known after apply)
    }

  # aws_alb_target_group_attachment.linux-alb-target-group-http-attach[1] will be created
  + resource "aws_alb_target_group_attachment" "linux-alb-target-group-http-attach" {
      + id               = (known after apply)
      + port             = 80
      + target_group_arn = "arn:aws:elasticloadbalancing:us-east-1:647780367117:targetgroup/lab-aws-dev-linux-alb-tg-http/bcd183c3daf60605"      
      + target_id        = (known after apply)
    }

  # aws_instance.linux-server[0] will be created
  + resource "aws_instance" "linux-server" {
      + ami                                  = "ami-08a52ddb321b32a8c"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = false
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "lab-aws-dev-windows-us-east-1"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = false
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = "subnet-0992e4f2d0fc839fb"
      + tags                                 = {
          + "Environment" = "dev"
          + "Name"        = "lab-aws-dev-linux-server-1"
        }
      + tags_all                             = {
          + "Environment" = "dev"
          + "Name"        = "lab-aws-dev-linux-server-1"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "896c17d7124ee2f001894a26565ac0719f580a89"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = [
          + "sg-02dd7a07cb7be7783",
        ]

      + ebs_block_device {
          + delete_on_termination = true
          + device_name           = "/dev/xvda"
          + encrypted             = true
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 10
          + volume_type           = "gp2"
        }

      + root_block_device {
          + delete_on_termination = true
          + device_name           = (known after apply)
          + encrypted             = true
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 20
          + volume_type           = "gp2"
        }
    }

  # aws_instance.linux-server[1] will be created
  + resource "aws_instance" "linux-server" {
      + ami                                  = "ami-08a52ddb321b32a8c"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = false
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + host_resource_group_arn              = (known after apply)
      + iam_instance_profile                 = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_lifecycle                   = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t2.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = "lab-aws-dev-windows-us-east-1"
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns                          = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns                           = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = false
      + spot_instance_request_id             = (known after apply)
      + subnet_id                            = "subnet-0cbc66ce6dfcb28d0"
      + tags                                 = {
          + "Environment" = "dev"
          + "Name"        = "lab-aws-dev-linux-server-2"
        }
      + tags_all                             = {
          + "Environment" = "dev"
          + "Name"        = "lab-aws-dev-linux-server-2"
        }
      + tenancy                              = (known after apply)
      + user_data                            = "896c17d7124ee2f001894a26565ac0719f580a89"
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = [
          + "sg-02dd7a07cb7be7783",
        ]

      + ebs_block_device {
          + delete_on_termination = true
          + device_name           = "/dev/xvda"
          + encrypted             = true
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + snapshot_id           = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 10
          + volume_type           = "gp2"
        }

      + root_block_device {
          + delete_on_termination = true
          + device_name           = (known after apply)
          + encrypted             = true
          + iops                  = (known after apply)
          + kms_key_id            = (known after apply)
          + throughput            = (known after apply)
          + volume_id             = (known after apply)
          + volume_size           = 20
          + volume_type           = "gp2"
        }
    }

  # aws_route_table.private-rt will be updated in-place
  ~ resource "aws_route_table" "private-rt" {
        id               = "rtb-05a70f560c0e7a1c9"
      ~ route            = [
          - {
              - carrier_gateway_id         = ""
              - cidr_block                 = "0.0.0.0/0"
              - core_network_arn           = ""
              - destination_prefix_list_id = ""
              - egress_only_gateway_id     = ""
              - gateway_id                 = ""
              - ipv6_cidr_block            = ""
              - local_gateway_id           = ""
              - nat_gateway_id             = "nat-0e30ef4b0927848dd"
              - network_interface_id       = ""
              - transit_gateway_id         = ""
              - vpc_endpoint_id            = ""
              - vpc_peering_connection_id  = ""
            },
          + {
              + carrier_gateway_id         = ""
              + cidr_block                 = "0.0.0.0/0"
              + core_network_arn           = ""
              + destination_prefix_list_id = ""
              + egress_only_gateway_id     = ""
              + gateway_id                 = "nat-0e30ef4b0927848dd"
              + ipv6_cidr_block            = ""
              + local_gateway_id           = ""
              + nat_gateway_id             = ""
              + network_interface_id       = ""
              + transit_gateway_id         = ""
              + vpc_endpoint_id            = ""
              + vpc_peering_connection_id  = ""
            },
        ]
        tags             = {
            "Environment" = "dev"
            "Name"        = "lab-aws-dev-private-subnet-rt"
        }
        # (5 unchanged attributes hidden)
    }

Plan: 4 to add, 1 to change, 0 to destroy.

Changes to Outputs:
  + vm_linux_server_instance_id         = [
      + (known after apply),
      + (known after apply),
    ]
  + vm_linux_server_instance_private_ip = [
      + (known after apply),
      + (known after apply),
    ]
╷
│ Warning: Value for undeclared variable
│
│ The root module does not declare a variable named "public_subnet_cidr" but a value was found in file "terraform.tfvars". If you meant to use   
│ this value, add a "variable" block to the configuration.
│
│ To silence these warnings, use TF_VAR_... environment variables to provide certain "global" settings to all configurations in your
│ organization. To reduce the verbosity of these warnings, use the -compact-warnings option.
╵
╷
│ Warning: Argument is deprecated
│
│   with aws_eip.nat-eip,
│   on network-main.tf line 77, in resource "aws_eip" "nat-eip":
│   77:   vpc = true
│
│ use domain attribute instead
│
│ (and one more similar warning elsewhere)
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

aws_route_table.private-rt: Modifying... [id=rtb-05a70f560c0e7a1c9]
aws_instance.linux-server[1]: Creating...
aws_instance.linux-server[0]: Creating...
aws_route_table.private-rt: Modifications complete after 1s [id=rtb-05a70f560c0e7a1c9]
aws_instance.linux-server[1]: Still creating... [10s elapsed]
aws_instance.linux-server[0]: Still creating... [10s elapsed]
aws_instance.linux-server[0]: Still creating... [20s elapsed]
aws_instance.linux-server[1]: Still creating... [20s elapsed]
aws_instance.linux-server[1]: Still creating... [30s elapsed]
aws_instance.linux-server[0]: Still creating... [30s elapsed]
aws_instance.linux-server[0]: Creation complete after 34s [id=i-084243c9ce80caf54]
aws_instance.linux-server[1]: Creation complete after 34s [id=i-0b438cbc00dbc04e3]
aws_alb_target_group_attachment.linux-alb-target-group-http-attach[0]: Creating...
aws_alb_target_group_attachment.linux-alb-target-group-http-attach[1]: Creating...
aws_alb_target_group_attachment.linux-alb-target-group-http-attach[1]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-1:647780367117:targetgroup/lab-aws-dev-linux-alb-tg-http/bcd183c3daf60605-20230823035506220800000003]
aws_alb_target_group_attachment.linux-alb-target-group-http-attach[0]: Creation complete after 1s [id=arn:aws:elasticloadbalancing:us-east-1:647780367117:targetgroup/lab-aws-dev-linux-alb-tg-http/bcd183c3daf60605-20230823035506306800000004]

Apply complete! Resources: 4 added, 1 changed, 0 destroyed.

Outputs:

lb_dns_name = "lab-aws-dev-linux-alb-1939294178.us-east-1.elb.amazonaws.com"
vm_linux_server_instance_id = [
  "i-084243c9ce80caf54",
  "i-0b438cbc00dbc04e3",
]
vm_linux_server_instance_private_ip = [
  "10.11.1.20",
  "10.11.2.233",